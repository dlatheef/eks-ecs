# Provider Block
provider "aws" {
  region  = "ap-south-1"
  profile = "sreenivas" 
}

# Data Source for Availability Zones
data "aws_availability_zones" "available" {}

# Variable Definitions
variable "aws_region" {
  description = "AWS region for infrastructure deployment"
  type        = string
  default     = "us-east-1"
}

variable "cluster_name" {
  description = "Name of the EKS cluster"
  type        = string
  default     = "cicd-cluster"
}

variable "cluster_version" {
  description = "Version of Kubernetes to use in the EKS cluster"
  type        = string
  default     = "1.25"
}

variable "python_repo_name" {
  description = "Name of the Python application ECR repository"
  type        = string
  default     = "python-app-repo"
}

variable "java_repo_name" {
  description = "Name of the Java application ECR repository"
  type        = string
  default     = "java-app-repo"
}

# AWS Resources

# Create a VPC
resource "aws_vpc" "main" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_support   = true
  enable_dns_hostnames = true
  tags = {
    Name = "main-vpc"
  }
}

# Create Public Subnets
resource "aws_subnet" "public" {
  count                   = 2
  vpc_id                  = aws_vpc.main.id
  cidr_block              = cidrsubnet(aws_vpc.main.cidr_block, 4, count.index)
  availability_zone       = data.aws_availability_zones.available.names[count.index]
  map_public_ip_on_launch = true
  tags = {
    Name = "public-subnet-${count.index}"
  }
}

# Local Block for Subnet IDs
locals {
  public_subnet_ids = [for subnet in aws_subnet.public : subnet.id]
}

# AWS ECR Repositories
resource "aws_ecr_repository" "python_repo" {
  name = var.python_repo_name
}

resource "aws_ecr_repository" "java_repo" {
  name = var.java_repo_name
}

# EKS Cluster using Terraform Module
module "eks" {
  source          = "terraform-aws-modules/eks/aws"
  version         = "19.17.0" # Update this to your required version
  cluster_name    = var.cluster_name
  cluster_version = var.cluster_version
  vpc_id          = aws_vpc.main.id
  subnet_ids      = local.public_subnet_ids # Corrected argument name
  enable_irsa     = true                   # Optional: Enables IAM Roles for Service Accounts
}

# Outputs
output "vpc_id" {
  value = aws_vpc.main.id
}

output "subnet_ids" {
  value = local.public_subnet_ids
}

output "python_repo_url" {
  value = aws_ecr_repository.python_repo.repository_url
}

output "java_repo_url" {
  value = aws_ecr_repository.java_repo.repository_url
}

output "eks_cluster_endpoint" {
  value = module.eks.cluster_endpoint
}